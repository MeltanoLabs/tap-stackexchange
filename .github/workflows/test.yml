name: Test tap-stackexchange

on:
  push:
    branches: [main]
    paths:
    - .github/workflows/constraints.txt
    - .github/workflows/test.yml
    - tap_stackexchange/**
    - tests/**
    - poetry.lock
    - pyproject.toml
    - tox.ini
  pull_request:
    branches: [main]
    paths:
    - .github/workflows/constraints.txt
    - .github/workflows/test.yml
    - tap_stackexchange/**
    - tests/**
    - poetry.lock
    - pyproject.toml
    - tox.ini
  schedule:
  - cron: "0 10 * * *"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  FORCE_COLOR: "1"

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      UV_CONSTRAINT: ${{ github.workspace }}/.github/workflows/constraints.txt
    strategy:
      matrix:
        python-version:
        - "3.9"
        - "3.10"
        - "3.11"
        - "3.12"
        - "3.13"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.1

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5.1.1
      with:
        python-version: ${{ matrix.python-version }}
        allow-prereleases: true

    - uses: astral-sh/setup-uv@v5
      with:
        version: ">=0.5.19"

    - name: Install tox
      run: |
        uv tool install --with tox-uv tox
        tox --version

    - name: Run tests
      env:
        TAP_STACKEXCHANGE_KEY: ${{ secrets.TAP_STACKEXCHANGE_KEY }}
      run: |
        tox -e py$(echo ${{ matrix.python-version }} | tr -d .)

  typing:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - uses: astral-sh/setup-uv@v5
      with:
        version: ">=0.5.19"

    - name: Run typing checks
      run: |
        uv run mypy tap_stackexchange
